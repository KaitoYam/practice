[{"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/index.js":"1","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/App.js":"2","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/AuthService.js":"3","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/LoggedInRoute.js":"4","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Room.js":"5","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Login.js":"6","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/SignUp.js":"7","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Recommended.js":"8","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/album.js":"9","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Todo.js":"10","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/profile/UpDate.js":"11","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/config/Firebase.js":"12","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Form.js":"13"},{"size":152,"mtime":1608526038033,"results":"14","hashOfConfig":"15"},{"size":1175,"mtime":1608993739341,"results":"16","hashOfConfig":"15"},{"size":502,"mtime":1608526038032,"results":"17","hashOfConfig":"15"},{"size":543,"mtime":1608691108197,"results":"18","hashOfConfig":"15"},{"size":3165,"mtime":1609045105581,"results":"19","hashOfConfig":"15"},{"size":2270,"mtime":1608956916788,"results":"20","hashOfConfig":"15"},{"size":2696,"mtime":1608956916791,"results":"21","hashOfConfig":"15"},{"size":7046,"mtime":1609048280362,"results":"22","hashOfConfig":"15"},{"size":2844,"mtime":1609048898565,"results":"23","hashOfConfig":"15"},{"size":2787,"mtime":1609043435227,"results":"24","hashOfConfig":"15"},{"size":3665,"mtime":1609045063432,"results":"25","hashOfConfig":"15"},{"size":607,"mtime":1608971727937,"results":"26","hashOfConfig":"15"},{"size":1100,"mtime":1609041241362,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1x649bw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/index.js",[],["57","58"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/App.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/AuthService.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/LoggedInRoute.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Room.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Login.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/SignUp.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Recommended.js",["59"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/album.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Todo.js",["60","61","62"],"import React, { useState, useEffect, useContext } from 'react'\nimport Form from './Form'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../AuthService'\nimport './todo.css'\nimport firebase from '../config/Firebase'\n\n//MaaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([])\n  const user = useContext(AuthContext)\n  const addTodo = contents => {\n    console.log(contents)\n    firebase.firestore().collection('todos')\n      .add({\n        state: false,\n        content: contents,\n        date: new Date(),\n        user:user.displayName\n      })\n  }\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n\n  useEffect(() => {\n    firebase.firestore().collection('todos').where(\"user\", \"==\", user.displayName).onSnapshot((snapshot) => {\n        const todos = snapshot.docs.map(doc => {\n          return doc.data()\n        })\n        setTodos(todos)\n      })\n    var delete_todos = firebase.firestore().collection('todos').where(\"state\", \"==\", true);\n    delete_todos.get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data());\n        doc.ref.delete();\n      });\n    })\n  }, [])\n\n  //MaterialUI\n  const classes = useStyles();\n\n  return (\n    <>\n      <h1 className=\"title_todo\">Todoリスト</h1>\n      <Button size=\"small\" variant=\"outlined\" onClick={() => firebase.auth().signOut()}>ログアウト</Button>\n      {/* <button onClick={() => firebase.auth().signOut()}>Logout</button> */}\n      <div className=\"wrap_todo\">\n        <p ><Link to=\"/Room\" className=\"link_todo\">トーク</Link></p>\n        <p className=\"nav_todo\">Todo</p> \n        <p ><Link to=\"/Recommended\" className=\"link_todo\">おすすめ</Link></p>\n        <p ><Link to=\"/album\" className=\"link_todo\">卒業アルバム</Link></p>\n      </div>\n      <h4 className=\"purpose\">目標：アプリを一つ作る</h4>\n      <Form addTodo={addTodo} />\n      <ul className=\"list_style\">\n        {todos ?\n          todos.map((todo, id) =>\n          (<li key={id}>\n            <input type=\"checkbox\" onChange={() => {\n              firebase.firestore().collection('todos').where(\"content\", \"==\", todo.content).get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  doc.ref.update({state: !doc.data().state});\n                });\n              })\n            }}\n            />\n            <span>{todo.content}</span>\n          </li>)\n          ) :\n          <p>...loading</p>\n        }\n      </ul>\n    </>\n  )\n}\nexport default Todo","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/profile/UpDate.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/config/Firebase.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Form.js",["63"],"import React, {useState} from 'react'\n\n\n//MaaterialUI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Form = ({addTodo}) => {\n  const [value, setValue] = useState('')\n  const handleSubmit = e => {\n    e.preventDefault()\n    console.log('value: ', value)\n\n  //JSを使ってフォーム内テキストをゲット\n  var reflesh = document.getElementById(\"inptext\");\n\n  if(reflesh.value === \"\")\n    alert(\"中身が空です\");\n  else\n    addTodo(value)\n\n  //JSを使ってフォーム内テキストをリセット\n    reflesh.value =\"\";\n  }\n  //MaterialUI\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n  const classes = useStyles();\n  return (\n  <form onSubmit = {handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\n      <TextField size=\"small\" id=\"inptext\" label=\"todoの追加\" onChange={e => {\n          setValue(e.target.value)\n        }}/>\n  </form>\n  )\n}\n\nexport default Form",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":91,"column":25,"nodeType":"70","endLine":91,"endColumn":236},{"ruleId":"71","severity":1,"message":"72","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":48,"column":6,"nodeType":"77","endLine":48,"endColumn":8,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":51,"column":9,"nodeType":"73","messageId":"74","endLine":51,"endColumn":16},{"ruleId":"71","severity":1,"message":"80","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":14},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.displayName'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'classes' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [user.displayName]",{"range":"86","text":"87"},[1414,1416],"[user.displayName]"]