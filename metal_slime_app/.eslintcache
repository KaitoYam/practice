[{"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/index.js":"1","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/App.js":"2","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/LoggedInRoute.js":"3","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/AuthService.js":"4","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/start.js":"5","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/album.js":"6","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/Recommended.js":"7","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/Room.js":"8","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/Login.js":"9","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/SignUp.js":"10","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/profile/UpDate.js":"11","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/profile/HeaderImage.js":"12","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/config/Firebase.js":"13","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/todo/Todo.js":"14","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/Menu/menu.js":"15","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/todo/Form.js":"16"},{"size":152,"mtime":1611016767004,"results":"17","hashOfConfig":"18"},{"size":3279,"mtime":1611281777538,"results":"19","hashOfConfig":"18"},{"size":543,"mtime":1611016767003,"results":"20","hashOfConfig":"18"},{"size":502,"mtime":1611016767003,"results":"21","hashOfConfig":"18"},{"size":613,"mtime":1611016767008,"results":"22","hashOfConfig":"18"},{"size":2222,"mtime":1611016767006,"results":"23","hashOfConfig":"18"},{"size":6492,"mtime":1611016767005,"results":"24","hashOfConfig":"18"},{"size":5616,"mtime":1611369328981,"results":"25","hashOfConfig":"18"},{"size":2275,"mtime":1611383942757,"results":"26","hashOfConfig":"18"},{"size":2743,"mtime":1611016767005,"results":"27","hashOfConfig":"18"},{"size":2495,"mtime":1611016767008,"results":"28","hashOfConfig":"18"},{"size":927,"mtime":1611281644368,"results":"29","hashOfConfig":"18"},{"size":607,"mtime":1611016767003,"results":"30","hashOfConfig":"18"},{"size":2497,"mtime":1611048521884,"results":"31","hashOfConfig":"18"},{"size":2821,"mtime":1611016767003,"results":"32","hashOfConfig":"18"},{"size":1053,"mtime":1611016767008,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"y4y61e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/index.js",[],["69","70"],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/App.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/LoggedInRoute.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/AuthService.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/start.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/album.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/Recommended.js",["71"],"import React from 'react'\nimport css from './style.css'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        // backgroundColor: theme.palette.background.paper,\n    },\n}));\nconst Recommended = () => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div className={css}>\n            <h1 className=\"title_osusume\">おすすめ</h1>\n            <Paper className={classes.root}>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" centered>\n                    <Tab label=\"山口海斗\" {...a11yProps(0)} />\n                    <Tab label=\"鈴木孝太郎\" {...a11yProps(1)} />\n                    <Tab label=\"松本彪\" {...a11yProps(2)} />\n                </Tabs>\n            </Paper>\n            {/* <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_A\" className=\"tab_radio\" defaultChecked />\n            <label htmlFor=\"tab_radio_A\" className=\"tab_menu\">山口海斗</label>\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_B\" className=\"tab_radio\" />\n            <label htmlFor=\"tab_radio_B\" className=\"tab_menu\">鈴木孝太郎</label>\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_C\" className=\"tab_radio\" />\n            <label htmlFor=\"tab_radio_C\" className=\"tab_menu\">松本彪</label> */}\n            <TabPanel value={value} index={0}>\n                <ul className='left-side'>\n                    <li >言語に限らず、firestoreやwordpressなど幅広移動ががある。動画も一つ一つが軽いので取り組みやすいです！</li>\n                    <a href=\"https://dotinstall.com/\">ドットインストール</a>\n                    <li >gitのコマンドについて漫画で教えてくれます。意外とわかりやすい。</li>\n                    <a href=\"https://www.r-staffing.co.jp/engineer/entry/20190621_1\">gitを漫画で理解</a>\n                </ul>\n      </TabPanel>\n            <TabPanel value={value} index={1}>\n                <ul className='left-side'>\n                    <li >gitコマンドの意味がまとまっていて、分からない時に役立ちます！</li>\n                    <a href=\"https://kitsune.blog/git-command\">gitコマンドの使い方 まとめ集</a>\n                    <li >VS codeのショートカットキーで作業効率が上がるので便利です！</li>\n                    <div id=\"iframe-parent\">\n                        <iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/cNyvefTJOcM\" frameorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>【完全保存版】VS Code ショートカット</iframe>\n                    </div>\n                </ul>\n      </TabPanel>\n            <TabPanel value={value} index={2}>\n                <ul className='left-side'>\n                    <li >初心者でもわかりやすいコードの基本的な書き方が学べます。</li>\n                    <a href=\"https://prog-8.com/\">Progate</a>\n                    <li >gitがわからなくなったときにこれを見れば大体解決できます。</li>\n                    <a href=\"https://backlog.com/ja/git-tutorial/\">サル先生のGit入門</a>\n                </ul>\n      </TabPanel>\n            {/* <div id=\"tab_contains_A\" className=\"tab_contains\">\n                <ul>\n                    <li>言語に限らず、firestoreやwordpressなど幅広移動ががある。動画も一つ一つが軽いので取り組みやすいです！</li>\n                    <a href=\"https://dotinstall.com/\">ドットインストール</a>\n                    <li>gitのコマンドについて漫画で教えてくれます。意外とわかりやすい。</li>\n                    <a href=\"https://www.r-staffing.co.jp/engineer/entry/20190621_1\">gitを漫画で理解</a>\n                </ul>\n            </div>\n            <div id=\"tab_contains_B\" className=\"tab_contains\">\n               <ul>\n                   <li>gitコマンドの意味がまとまっていて、分からない時に役立ちます！</li>\n                   <a href=\"https://kitsune.blog/git-command\">gitコマンドの使い方 まとめ集</a>\n                   <li>VS codeのショートカットキーで作業効率が上がるので便利です！</li>\n                   <div id=\"iframe-parent\">\n                   <iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/cNyvefTJOcM\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>【完全保存版】VS Code ショートカット</iframe>\n                   </div>\n               </ul>\n            </div>\n            <div id=\"tab_contains_C\" className=\"tab_contains\">\n                <ul>\n                    <li>初心者でもわかりやすいコードの基本的な書き方が学べます。</li>\n                    <a href=\"https://prog-8.com/\">Progate</a>\n                    <li>gitがわからなくなったときにこれを見れば大体解決できます。</li>\n                    <a href=\"https://backlog.com/ja/git-tutorial/\">サル先生のGit入門</a>\n                </ul>\n            </div> */}\n        </div>\n    )\n}\nexport default Recommended","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/Room.js",["72"],"import React, { useState, useEffect, useContext, useRef } from 'react'\nimport firebase from '../config/Firebase'\n\nimport { AuthContext } from '../AuthService'\n\nimport './room.css'\nimport profile from '../img/profile.img.jpg'\nimport { Paper, Avatar, Button } from '@material-ui/core'\nimport SendIcon from '@material-ui/icons/Send'\nimport moment from 'moment'　// その時の時間表示\n\nconst Room = () => {\n    const [messages, setMessages] = useState(null)\n    const [value, setValue] = useState('')\n    const [image, setImage] = useState('')\n\n    const user = useContext(AuthContext)\n    //AuthserviceのReact.createContextからの戻り値で認証ユーザー\n\n    useEffect(() => {\n        firebase.firestore().collection('messages').orderBy('date')\n            .onSnapshot((snapshot) => {\n                const messages = snapshot.docs.map(doc => {\n                    return doc.data()\n                })\n                //　onsnapshotでmessagesコレクションのデータを取得（docsはランダムデータID） \n                setMessages(messages)\n            })\n        firebase.storage().ref().child(`/images/${user.uid}`).getDownloadURL().then(fireBaseUrl => {\n            setImage(fireBaseUrl)\n        })\n        console.log('image')\n    }, [])\n    console.log(image)\n\n    // スクロール内の下へ移動/ react-scroll-into-viewをインストール\n    const chatScrollEnd = useRef(null)\n    const scrollToBottom = () => {\n        if (chatScrollEnd.current) {\n            chatScrollEnd.current.scrollIntoView({ block: \"end\", behavior: \"smooth\" })\n        }\n    }\n    useEffect(scrollToBottom, [messages])\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const textNone = document.getElementById('tuika')\n        if (textNone.value === '')\n            return;\n        else\n            textNone.value = ''\n        firebase.firestore().collection('messages').doc()\n            .set({\n                user: user.displayName,\n                content: value,\n                image: image,\n                date: new Date(),\n                createAt: new Date().getTime(),　// 時間を取得\n                uid: user.uid //各々のユーザー情報(id)\n            })\n        setMessages([\n            ...messages,\n            {\n                user: user.displayName,\n                image: image,\n                content: value,\n                //date: new Date(),\n                uid: user.uid\n            }\n        ])\n    }\n\n    let view = ''\n\n    return (\n        <div>\n            <h1 className=\"title_chat\">トーク</h1>\n\n            <div className='took'>\n                <Paper>\n                    {/* ↓今のメッセージの数 */}\n                    <div className='room-ul' >\n                        {messages\n                            ?\n                            messages.map((message, id) =>\n                            (<React.Fragment key={id} >\n                                <p>{(() => {\n                                    if(view !== moment(message.createAt).format('YYYY/MM/DD')){\n                                        view = moment(message.createAt).format('YYYY/MM/DD')\n                                        return(view)\n                                    }\n                                })()}</p>\n                                {message.uid !== user.uid && <div className='messages-left'>\n                                    <Avatar>\n                                        <div className='icon'>\n                                            <img className='icon-img' src={message.image ? message.image : profile} alt='プロフィール画像' />\n                                        </div>\n                                    </Avatar>\n                                    <div>\n                                        <p className='user-name'>{message.user}</p>\n                                        <p className='message-left'>{message.content}</p>\n                                        <p className='message-time time-right'>{moment(message.createAt).format('A HH:mm')}</p>\n                                    </div>\n                                </div>}\n                                {message.uid === user.uid && <div className='messages-right'>\n                                    <div>\n                                        <p className='message-right'>{message.content}</p>\n                                        <p className='message-time time-left'>{moment(message.createAt).format('A HH:mm')}</p>\n                                    </div>\n                                </div>}\n                            </React.Fragment>)\n                            ) :\n                            <p>...loading</p>\n                        }\n                        <div ref={chatScrollEnd} />\n                    </div>\n                </Paper>\n                {/* ↓自分でメッセージをつくりだす */}\n                <form onSubmit={handleSubmit} className='took-form2' >\n                    <div className='took-form'>\n                        <input\n                            type='text'\n                            id='tuika'\n                            placeholder='メッセージを入力'\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </div>\n                    <Button variant=\"contained\" color=\"primary\" style={{ background: '#616161', marginTop: '1rem' }} >\n                        <SendIcon />\n                    </Button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Room","/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/Login.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/pages/SignUp.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/profile/UpDate.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/profile/HeaderImage.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/config/Firebase.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/todo/Todo.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/Menu/menu.js",[],"/Users/suzukikoutarou/practice/practice/metal_slime_app/src/todo/Form.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":81,"column":25,"nodeType":"79","endLine":81,"endColumn":235},{"ruleId":"80","severity":1,"message":"81","line":33,"column":8,"nodeType":"82","endLine":33,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [user.uid]",{"range":"89","text":"90"},[1174,1176],"[user.uid]"]