[{"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/index.js":"1","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/App.js":"2","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/AuthService.js":"3","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/LoggedInRoute.js":"4","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/SignUp.js":"5","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Login.js":"6","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/album.js":"7","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Todo.js":"8","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Recommended.js":"9","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Room.js":"10","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/profile/UpDate.js":"11","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Form.js":"12","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/List.js":"13","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/config/Firebase.js":"14","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Item.js":"15"},{"size":152,"mtime":1608526038033,"results":"16","hashOfConfig":"17"},{"size":1175,"mtime":1608993739341,"results":"18","hashOfConfig":"17"},{"size":502,"mtime":1608526038032,"results":"19","hashOfConfig":"17"},{"size":543,"mtime":1608691108197,"results":"20","hashOfConfig":"17"},{"size":2696,"mtime":1608956916791,"results":"21","hashOfConfig":"17"},{"size":2270,"mtime":1608956916788,"results":"22","hashOfConfig":"17"},{"size":2796,"mtime":1609043143306,"results":"23","hashOfConfig":"17"},{"size":2787,"mtime":1609041000298,"results":"24","hashOfConfig":"17"},{"size":3382,"mtime":1609043156086,"results":"25","hashOfConfig":"17"},{"size":3072,"mtime":1608995191778,"results":"26","hashOfConfig":"17"},{"size":3326,"mtime":1608995319357,"results":"27","hashOfConfig":"17"},{"size":1100,"mtime":1609041241362,"results":"28","hashOfConfig":"17"},{"size":500,"mtime":1608981583851,"results":"29","hashOfConfig":"17"},{"size":607,"mtime":1608971727937,"results":"30","hashOfConfig":"17"},{"size":440,"mtime":1608971580590,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1x649bw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/index.js",[],["67","68"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/App.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/AuthService.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/LoggedInRoute.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/SignUp.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Login.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/album.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Todo.js",["69","70","71"],"import React, { useState, useEffect, useContext } from 'react'\nimport Form from './Form'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../AuthService'\nimport './todo.css'\nimport firebase from '../config/Firebase'\n\n//MaaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([])\n  const user = useContext(AuthContext)\n  const addTodo = contents => {\n    console.log(contents)\n    firebase.firestore().collection('todos')\n      .add({\n        state: false,\n        content: contents,\n        date: new Date(),\n        user:user.displayName\n      })\n  }\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n\n  useEffect(() => {\n    firebase.firestore().collection('todos').where(\"user\", \"==\", user.displayName).onSnapshot((snapshot) => {\n        const todos = snapshot.docs.map(doc => {\n          return doc.data()\n        })\n        setTodos(todos)\n      })\n    var delete_todos = firebase.firestore().collection('todos').where(\"state\", \"==\", true);\n    delete_todos.get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data());\n        doc.ref.delete();\n      });\n    })\n  }, [])\n\n  //MaterialUI\n  const classes = useStyles();\n\n  return (\n    <>\n      <h1 className=\"title_todo\">Todoリスト</h1>\n      <Button size=\"small\" variant=\"outlined\" onClick={() => firebase.auth().signOut()}>ログアウト</Button>\n      {/* <button onClick={() => firebase.auth().signOut()}>Logout</button> */}\n      <div className=\"wrap_todo\">\n        <p ><Link to=\"/Room\" className=\"link_todo\">トーク</Link></p>\n        <p className=\"nav_todo\">Todo</p> \n        <p ><Link to=\"/Recommended\" className=\"link_todo\">おすすめ</Link></p>\n        <p ><Link to=\"/album\" className=\"link_todo\">卒業アルバム</Link></p>\n      </div>\n      <h4 className=\"purpose\">目標：アプリを一つ作る</h4>\n      <Form addTodo={addTodo} />\n      <ul className=\"list_style\">\n        {todos ?\n          todos.map((todo, id) =>\n          (<li key={id}>\n            <input type=\"checkbox\" onChange={() => {\n              firebase.firestore().collection('todos').where(\"content\", \"==\", todo.content).get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  doc.ref.update({state: !doc.data().state});\n                });\n              })\n            }}\n            />\n            <span>{todo.content}</span>\n          </li>)\n          ) :\n          <p>...loading</p>\n        }\n      </ul>\n    </>\n  )\n}\nexport default Todo","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Recommended.js",["72"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Room.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/profile/UpDate.js",["73"],"import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport './UpDate.css'\nimport firebase, { storage } from '../config/Firebase'\nimport { AuthContext } from '../AuthService'\n\nconst UpDate = () => {\n    const [image, setImage] = useState('')\n    const [imageUrl, setImageUrl] = useState('')\n    const handleImage = e => {\n        const image = e.target.files[0];\n        // e.target.files[0]でファイル選択で選ばせたファイルになる\n        setImage(image)\n    }\n    \n    const user = useContext(AuthContext)\n\n    // const updateProfileDate = {\n    //     imageUrl:''\n    // }\n    const handleUpdate = e => {\n        e.preventDefault()\n        // if (imageUrl !== user.imageUrl) {\n        //     updateProfileDate = {\n        //         ...updateProfileDate,imageUrl:imageUrl\n        //     }\n        // }\n    }\n    const onSubmit = e => {\n        e.preventDefault()\n        if (image === '') {\n            return;\n        }\n\n        \n        \n        firebase.firestore().collection('profile').add({\n            user: user.displayName,\n            date: new Date(),\n            imgUrl:imageUrl\n        })\n        \n        // アップロード処理\n        \n        const uploadTask = storage.ref(`/images/${image.name}`).put(image);\n        // storage.ref(`/images/${image.name}`) でfirebase storageにフォルダとファイル名を指定し、アップロード\n        uploadTask.on(\n            firebase.storage.TaskEvent.state_changed,\n            next,\n            error,\n            complete\n        )\n        // nextはアップロードの進行度や状態を取得するための関数\n        // error エラーが起きた時の処理\n        // complete アップロード成功後の処理\n\n    }\n\n    const next = snapshot => {\n        // 進行中のsnapshotを得る\n        // アップロードの進行度を表示\n        const precent = (snapshot.bytesTtansferred / snapshot.totalBytes)\n        console.log(precent + '% done')\n        console.log(snapshot)\n    }\n\n    const error = () => {\n        // エラーハンドリング\n        console.log('error')\n    }\n\n    const complete = () => {\n        // 完了後の処理\n        //画像表示のため、アップロードした画像のURLを取得\n        storage.ref('images').child(image.name).getDownloadURL().then(fireBaseUrl => {\n            setImageUrl(fireBaseUrl)\n        })\n    }\n\n    return (\n        <div>\n            <h1 className=\"title_update\">プロフィール編集</h1>\n            <button onClick={() => firebase.auth().signOut()}>Logout</button>\n            <div className=\"wrap_nav_update\">\n                <p><Link to=\"/room\" className=\"link_update\">トーク</Link></p>\n                <p><Link to=\"/todo\" className=\"link_update\">Todo</Link></p>\n                <p><Link to=\"/Recommended\" className=\"link_update\">おすすめ</Link></p>\n                <p><Link to=\"/album\" className=\"link_update\">卒業アルバム</Link></p>\n            </div>\n            <form onSubmit={onSubmit}>\n                <input type='file' onChange={handleImage} />\n                <button>Upload</button>\n            </form>\n            <img src={imageUrl} alt='' />\n            {/* <button onSubmit={handleUpdate}>更新</button> */}\n        </div>\n    )\n}\n\nexport default UpDate;","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Form.js",["74"],"import React, {useState} from 'react'\n\n\n//MaaterialUI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Form = ({addTodo}) => {\n  const [value, setValue] = useState('')\n  const handleSubmit = e => {\n    e.preventDefault()\n    console.log('value: ', value)\n\n  //JSを使ってフォーム内テキストをゲット\n  var reflesh = document.getElementById(\"inptext\");\n\n  if(reflesh.value === \"\")\n    alert(\"中身が空です\");\n  else\n    addTodo(value)\n\n  //JSを使ってフォーム内テキストをリセット\n    reflesh.value =\"\";\n  }\n  //MaterialUI\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n  const classes = useStyles();\n  return (\n  <form onSubmit = {handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\n      <TextField size=\"small\" id=\"inptext\" label=\"todoの追加\" onChange={e => {\n          setValue(e.target.value)\n        }}/>\n  </form>\n  )\n}\n\nexport default Form","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/List.js",[],["75","76"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/config/Firebase.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Item.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":11,"column":8,"nodeType":"83","messageId":"84","endLine":11,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":48,"column":6,"nodeType":"87","endLine":48,"endColumn":8,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":51,"column":9,"nodeType":"83","messageId":"84","endLine":51,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":53,"column":20,"nodeType":"92","endLine":53,"endColumn":231},{"ruleId":"81","severity":1,"message":"93","line":21,"column":11,"nodeType":"83","messageId":"84","endLine":21,"endColumn":23},{"ruleId":"81","severity":1,"message":"94","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":14},{"ruleId":"77","replacedBy":"95"},{"ruleId":"79","replacedBy":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.displayName'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'classes' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'handleUpdate' is assigned a value but never used.","'Button' is defined but never used.",["97"],["98"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [user.displayName]",{"range":"102","text":"103"},[1414,1416],"[user.displayName]"]