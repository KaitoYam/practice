[{"C:\\Users\\user\\practice\\metal_slime_app\\src\\index.js":"1","C:\\Users\\user\\practice\\metal_slime_app\\src\\App.js":"2","C:\\Users\\user\\practice\\metal_slime_app\\src\\AuthService.js":"3","C:\\Users\\user\\practice\\metal_slime_app\\src\\LoggedInRoute.js":"4","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\SignUp.js":"5","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Room.js":"6","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Login.js":"7","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Todo.js":"8","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\album.js":"9","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Recommended.js":"10","C:\\Users\\user\\practice\\metal_slime_app\\src\\profile\\UpDate.js":"11","C:\\Users\\user\\practice\\metal_slime_app\\src\\config\\Firebase.js":"12","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Form.js":"13","C:\\Users\\user\\practice\\metal_slime_app\\src\\Menu\\menu.js":"14"},{"size":160,"mtime":1607422705003,"results":"15","hashOfConfig":"16"},{"size":2405,"mtime":1610452590048,"results":"17","hashOfConfig":"16"},{"size":523,"mtime":1608526916101,"results":"18","hashOfConfig":"16"},{"size":566,"mtime":1608947588807,"results":"19","hashOfConfig":"16"},{"size":2774,"mtime":1608947563818,"results":"20","hashOfConfig":"16"},{"size":4679,"mtime":1610451450504,"results":"21","hashOfConfig":"16"},{"size":2339,"mtime":1610375890254,"results":"22","hashOfConfig":"16"},{"size":2263,"mtime":1610455865706,"results":"23","hashOfConfig":"16"},{"size":2261,"mtime":1610377058028,"results":"24","hashOfConfig":"16"},{"size":6556,"mtime":1610377106165,"results":"25","hashOfConfig":"16"},{"size":2504,"mtime":1610378247095,"results":"26","hashOfConfig":"16"},{"size":627,"mtime":1609044273919,"results":"27","hashOfConfig":"16"},{"size":1144,"mtime":1609044703278,"results":"28","hashOfConfig":"16"},{"size":2912,"mtime":1610379282892,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"hdf9ai",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\user\\practice\\metal_slime_app\\src\\index.js",[],["63","64"],"C:\\Users\\user\\practice\\metal_slime_app\\src\\App.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\AuthService.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\LoggedInRoute.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\SignUp.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Room.js",["65","66"],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Login.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Todo.js",["67"],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\album.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Recommended.js",["68"],"import React from 'react'\r\nimport css from './style.css'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        // backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\nconst Recommended = () => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div className={css}>\r\n            <h1 className=\"title_osusume\">おすすめ</h1>\r\n            \r\n            <Paper className={classes.root}>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" centered>\r\n                    <Tab label=\"山口海斗\" {...a11yProps(0)} />\r\n                    <Tab label=\"鈴木孝太郎\" {...a11yProps(1)} />\r\n                    <Tab label=\"松本彪\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </Paper>\r\n            {/* <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_A\" className=\"tab_radio\" defaultChecked />\r\n            <label htmlFor=\"tab_radio_A\" className=\"tab_menu\">山口海斗</label>\r\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_B\" className=\"tab_radio\" />\r\n            <label htmlFor=\"tab_radio_B\" className=\"tab_menu\">鈴木孝太郎</label>\r\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_C\" className=\"tab_radio\" />\r\n            <label htmlFor=\"tab_radio_C\" className=\"tab_menu\">松本彪</label> */}\r\n            <TabPanel value={value} index={0}>\r\n                <ul>\r\n                    <li>言語に限らず、firestoreやwordpressなど幅広移動ががある。動画も一つ一つが軽いので取り組みやすいです！</li>\r\n                    <a href=\"https://dotinstall.com/\">ドットインストール</a>\r\n                    <li>gitのコマンドについて漫画で教えてくれます。意外とわかりやすい。</li>\r\n                    <a href=\"https://www.r-staffing.co.jp/engineer/entry/20190621_1\">gitを漫画で理解</a>\r\n                </ul>\r\n      </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <ul>\r\n                    <li>gitコマンドの意味がまとまっていて、分からない時に役立ちます！</li>\r\n                    <a href=\"https://kitsune.blog/git-command\">gitコマンドの使い方 まとめ集</a>\r\n                    <li>VS codeのショートカットキーで作業効率が上がるので便利です！</li>\r\n                    <div id=\"iframe-parent\">\r\n                        <iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/cNyvefTJOcM\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>【完全保存版】VS Code ショートカット</iframe>\r\n                    </div>\r\n                </ul>\r\n      </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <ul>\r\n                    <li>初心者でもわかりやすいコードの基本的な書き方が学べます。</li>\r\n                    <a href=\"https://prog-8.com/\">Progate</a>\r\n                    <li>gitがわからなくなったときにこれを見れば大体解決できます。</li>\r\n                    <a href=\"https://backlog.com/ja/git-tutorial/\">サル先生のGit入門</a>\r\n                </ul>\r\n      </TabPanel>\r\n            {/* <div id=\"tab_contains_A\" className=\"tab_contains\">\r\n                <ul>\r\n                    <li>言語に限らず、firestoreやwordpressなど幅広移動ががある。動画も一つ一つが軽いので取り組みやすいです！</li>\r\n                    <a href=\"https://dotinstall.com/\">ドットインストール</a>\r\n                    <li>gitのコマンドについて漫画で教えてくれます。意外とわかりやすい。</li>\r\n                    <a href=\"https://www.r-staffing.co.jp/engineer/entry/20190621_1\">gitを漫画で理解</a>\r\n                </ul>\r\n            </div>\r\n            <div id=\"tab_contains_B\" className=\"tab_contains\">\r\n               <ul>\r\n                   <li>gitコマンドの意味がまとまっていて、分からない時に役立ちます！</li>\r\n                   <a href=\"https://kitsune.blog/git-command\">gitコマンドの使い方 まとめ集</a>\r\n                   <li>VS codeのショートカットキーで作業効率が上がるので便利です！</li>\r\n                   <div id=\"iframe-parent\">\r\n                   <iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/cNyvefTJOcM\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>【完全保存版】VS Code ショートカット</iframe>\r\n                   </div>\r\n               </ul>\r\n            </div>\r\n            <div id=\"tab_contains_C\" className=\"tab_contains\">\r\n                <ul>\r\n                    <li>初心者でもわかりやすいコードの基本的な書き方が学べます。</li>\r\n                    <a href=\"https://prog-8.com/\">Progate</a>\r\n                    <li>gitがわからなくなったときにこれを見れば大体解決できます。</li>\r\n                    <a href=\"https://backlog.com/ja/git-tutorial/\">サル先生のGit入門</a>\r\n                </ul>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Recommended","C:\\Users\\user\\practice\\metal_slime_app\\src\\profile\\UpDate.js",["69"],"import React, { useState, useContext, useEffect } from 'react'\r\n\r\nimport profile from '../img/profile.img.jpg'\r\nimport './UpDate.css'\r\nimport { Paper, Fab } from '@material-ui/core'\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate'\r\n\r\nimport firebase from '../config/Firebase'\r\nimport { AuthContext } from '../AuthService'\r\n\r\nconst UpDate = () => {\r\n    const [image, setImage] = useState(null)\r\n\r\n    const user = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        firebase.storage().ref().child(`images/${user}`).getDownloadURL().then(fireBaseUrl => {\r\n            //アップロードした画像のURLを取得\r\n            setImage(fireBaseUrl)\r\n        })\r\n    }, [])\r\n\r\n    const handleImage = e => {\r\n        const images = e.target.files\r\n        // e.target.filesでファイル選択で選んだファイルになる\r\n        let blob = new Blob(images, { type: \"image/jpeg\" })\r\n        //Blob()コンストラクタはimages(画像など)をデータ化したもの\r\n\r\n        const uploadTask = firebase.storage().ref().child(`/images/${user.uid}`).put(blob)\r\n        //putでデータをアップロードする\r\n\r\n        uploadTask.then(() => {\r\n            // 通信が成功した時の処理(then)\r\n            uploadTask.snapshot.ref.getDownloadURL().then((fireBaseUrl => {\r\n                setImage(fireBaseUrl)\r\n                console.log('new', image)\r\n            }))\r\n        })\r\n            .then(() => {\r\n                user.updateProfile({\r\n                    photoURL: image\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title_update\">プロフィール編集</h1>\r\n\r\n            <div className='profile'>\r\n                <Paper style={{ padding: 16 }} elevation={1} >\r\n                    <div className='preview'>\r\n                        <img src={image ? image : profile} className='preview-img' alt='プレビュー画像表示' />\r\n                    </div>\r\n                    <input type='file' id='button-file' className='button-file' onChange={handleImage} />\r\n                    <div className='icon-file'>\r\n                        <Fab>\r\n                            <label htmlFor='button-file' className='label-size'>\r\n                                <AddPhotoAlternateIcon />\r\n                            </label>\r\n                        </Fab>\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpDate;","C:\\Users\\user\\practice\\metal_slime_app\\src\\config\\Firebase.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Form.js",["70"],"import React, {useState} from 'react'\r\n\r\n\r\n//MaaterialUI\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Form = ({addTodo}) => {\r\n  const [value, setValue] = useState('')\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    console.log('value: ', value)\r\n\r\n  //JSを使ってフォーム内テキストをゲット\r\n  var reflesh = document.getElementById(\"inptext\");\r\n\r\n  if(reflesh.value === \"\")\r\n    alert(\"中身が空です\");\r\n  else\r\n    addTodo(value)\r\n\r\n  //JSを使ってフォーム内テキストをリセット\r\n    reflesh.value =\"\";\r\n  }\r\n  //MaterialUI\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  return (\r\n  <form onSubmit = {handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField size=\"small\" id=\"inptext\" label=\"todoの追加\" onChange={e => {\r\n          setValue(e.target.value)\r\n        }}/>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default Form","C:\\Users\\user\\practice\\metal_slime_app\\src\\Menu\\menu.js",["71"],"import React, { useState, useContext } from 'react'\r\nimport {\r\n    IconButton,\r\n    makeStyles,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Drawer,\r\n    Link,\r\n    Divider\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport { AuthContext } from '../AuthService'\r\n\r\nconst UseStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst Menu = () => {\r\n    const classes = UseStyles();\r\n    const [state, setState] = useState(false)\r\n\r\n    const user = useContext(AuthContext)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                user === user &&\r\n                <>\r\n                    <IconButton\r\n                        style={{ color: \"#ffb74d\" }}\r\n                        aria-label='menu'\r\n                        onClick={() => { setState(true) }}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Drawer open={state} onClose={() => { setState(false) }} anchor=\"left\">\r\n                        <div className={classes.list}>\r\n                            <List>\r\n                                <Link href=\"/update\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary='プロフィール' />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider />\r\n                                <Link href=\"/Room\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary='トーク' />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider />\r\n                                <Link href=\"/todo\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary='Todo' />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider />\r\n                                <Link href=\"/Recommended\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary='おすすめ' />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider />\r\n                                <Link href=\"/album\">\r\n                                    <ListItem button>\r\n                                        <ListItemText primary='卒業アルバム' />\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider />\r\n                            </List>\r\n                        </div>\r\n                    </Drawer>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Menu",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":32,"column":8,"nodeType":"78","endLine":32,"endColumn":10,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":86,"column":45,"nodeType":"82","endLine":86,"endColumn":119},{"ruleId":"83","severity":1,"message":"84","line":52,"column":9,"nodeType":"85","messageId":"86","endLine":52,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":82,"column":25,"nodeType":"82","endLine":82,"endColumn":236},{"ruleId":"76","severity":1,"message":"89","line":21,"column":8,"nodeType":"78","endLine":21,"endColumn":10,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":40,"column":17,"nodeType":"94","messageId":"95","endLine":40,"endColumn":30},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.","ArrayExpression",["98"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["99"],"'Button' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [user.uid]",{"range":"104","text":"105"},"Update the dependencies array to be: [user]",{"range":"106","text":"107"},[1083,1085],"[user.uid]",[673,675],"[user]"]