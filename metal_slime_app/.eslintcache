<<<<<<< HEAD
[{"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/index.js":"1","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/App.js":"2","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/AuthService.js":"3","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/LoggedInRoute.js":"4","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Room.js":"5","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Login.js":"6","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/SignUp.js":"7","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Recommended.js":"8","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/album.js":"9","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Todo.js":"10","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/profile/UpDate.js":"11","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/config/Firebase.js":"12","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Form.js":"13"},{"size":152,"mtime":1608526038033,"results":"14","hashOfConfig":"15"},{"size":1175,"mtime":1608993739341,"results":"16","hashOfConfig":"15"},{"size":502,"mtime":1608526038032,"results":"17","hashOfConfig":"15"},{"size":543,"mtime":1608691108197,"results":"18","hashOfConfig":"15"},{"size":3165,"mtime":1609045105581,"results":"19","hashOfConfig":"15"},{"size":2270,"mtime":1608956916788,"results":"20","hashOfConfig":"15"},{"size":2696,"mtime":1608956916791,"results":"21","hashOfConfig":"15"},{"size":7046,"mtime":1609048280362,"results":"22","hashOfConfig":"15"},{"size":2844,"mtime":1609048898565,"results":"23","hashOfConfig":"15"},{"size":2787,"mtime":1609043435227,"results":"24","hashOfConfig":"15"},{"size":3665,"mtime":1609045063432,"results":"25","hashOfConfig":"15"},{"size":607,"mtime":1608971727937,"results":"26","hashOfConfig":"15"},{"size":1100,"mtime":1609041241362,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1x649bw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/index.js",[],["57","58"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/App.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/AuthService.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/LoggedInRoute.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Room.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Login.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/SignUp.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/Recommended.js",["59"],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/pages/album.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Todo.js",["60","61","62"],"import React, { useState, useEffect, useContext } from 'react'\nimport Form from './Form'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from '../AuthService'\nimport './todo.css'\nimport firebase from '../config/Firebase'\n\n//MaaterialUI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([])\n  const user = useContext(AuthContext)\n  const addTodo = contents => {\n    console.log(contents)\n    firebase.firestore().collection('todos')\n      .add({\n        state: false,\n        content: contents,\n        date: new Date(),\n        user:user.displayName\n      })\n  }\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n\n  useEffect(() => {\n    firebase.firestore().collection('todos').where(\"user\", \"==\", user.displayName).onSnapshot((snapshot) => {\n        const todos = snapshot.docs.map(doc => {\n          return doc.data()\n        })\n        setTodos(todos)\n      })\n    var delete_todos = firebase.firestore().collection('todos').where(\"state\", \"==\", true);\n    delete_todos.get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data());\n        doc.ref.delete();\n      });\n    })\n  }, [])\n\n  //MaterialUI\n  const classes = useStyles();\n\n  return (\n    <>\n      <h1 className=\"title_todo\">Todoリスト</h1>\n      <Button size=\"small\" variant=\"outlined\" onClick={() => firebase.auth().signOut()}>ログアウト</Button>\n      {/* <button onClick={() => firebase.auth().signOut()}>Logout</button> */}\n      <div className=\"wrap_todo\">\n        <p ><Link to=\"/Room\" className=\"link_todo\">トーク</Link></p>\n        <p className=\"nav_todo\">Todo</p> \n        <p ><Link to=\"/Recommended\" className=\"link_todo\">おすすめ</Link></p>\n        <p ><Link to=\"/album\" className=\"link_todo\">卒業アルバム</Link></p>\n      </div>\n      <h4 className=\"purpose\">目標：アプリを一つ作る</h4>\n      <Form addTodo={addTodo} />\n      <ul className=\"list_style\">\n        {todos ?\n          todos.map((todo, id) =>\n          (<li key={id}>\n            <input type=\"checkbox\" onChange={() => {\n              firebase.firestore().collection('todos').where(\"content\", \"==\", todo.content).get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  doc.ref.update({state: !doc.data().state});\n                });\n              })\n            }}\n            />\n            <span>{todo.content}</span>\n          </li>)\n          ) :\n          <p>...loading</p>\n        }\n      </ul>\n    </>\n  )\n}\nexport default Todo","/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/profile/UpDate.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/config/Firebase.js",[],"/Users/yamaguchikaito/metal_app/practice/metal_slime_app/src/todo/Form.js",["63"],"import React, {useState} from 'react'\n\n\n//MaaterialUI\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Form = ({addTodo}) => {\n  const [value, setValue] = useState('')\n  const handleSubmit = e => {\n    e.preventDefault()\n    console.log('value: ', value)\n\n  //JSを使ってフォーム内テキストをゲット\n  var reflesh = document.getElementById(\"inptext\");\n\n  if(reflesh.value === \"\")\n    alert(\"中身が空です\");\n  else\n    addTodo(value)\n\n  //JSを使ってフォーム内テキストをリセット\n    reflesh.value =\"\";\n  }\n  //MaterialUI\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }));\n  const classes = useStyles();\n  return (\n  <form onSubmit = {handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\n      <TextField size=\"small\" id=\"inptext\" label=\"todoの追加\" onChange={e => {\n          setValue(e.target.value)\n        }}/>\n  </form>\n  )\n}\n\nexport default Form",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":91,"column":25,"nodeType":"70","endLine":91,"endColumn":236},{"ruleId":"71","severity":1,"message":"72","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":48,"column":6,"nodeType":"77","endLine":48,"endColumn":8,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":51,"column":9,"nodeType":"73","messageId":"74","endLine":51,"endColumn":16},{"ruleId":"71","severity":1,"message":"80","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":14},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.displayName'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'classes' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [user.displayName]",{"range":"86","text":"87"},[1414,1416],"[user.displayName]"]
=======
[{"C:\\Users\\user\\practice\\metal_slime_app\\src\\index.js":"1","C:\\Users\\user\\practice\\metal_slime_app\\src\\App.js":"2","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Room.js":"3","C:\\Users\\user\\practice\\metal_slime_app\\src\\AuthService.js":"4","C:\\Users\\user\\practice\\metal_slime_app\\src\\LoggedInRoute.js":"5","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\SignUp.js":"6","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Login.js":"7","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Recommended.js":"8","C:\\Users\\user\\practice\\metal_slime_app\\src\\config\\Firebase.js":"9","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Todo.js":"10","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Form.js":"11","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\List.js":"12","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Item.js":"13","C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\album.js":"14","C:\\Users\\user\\practice\\metal_slime_app\\src\\profile\\UpDate.js":"15"},{"size":160,"mtime":1607422705003,"results":"16","hashOfConfig":"17"},{"size":1210,"mtime":1609379333382,"results":"18","hashOfConfig":"17"},{"size":3606,"mtime":1609324266210,"results":"19","hashOfConfig":"17"},{"size":523,"mtime":1608526916101,"results":"20","hashOfConfig":"17"},{"size":566,"mtime":1608947588807,"results":"21","hashOfConfig":"17"},{"size":2774,"mtime":1608947563818,"results":"22","hashOfConfig":"17"},{"size":2339,"mtime":1608888090303,"results":"23","hashOfConfig":"17"},{"size":3454,"mtime":1609044465992,"results":"24","hashOfConfig":"17"},{"size":627,"mtime":1609044273919,"results":"25","hashOfConfig":"17"},{"size":2873,"mtime":1609044703304,"results":"26","hashOfConfig":"17"},{"size":1144,"mtime":1609044703278,"results":"27","hashOfConfig":"17"},{"size":525,"mtime":1609044703297,"results":"28","hashOfConfig":"17"},{"size":460,"mtime":1608888119471,"results":"29","hashOfConfig":"17"},{"size":2846,"mtime":1609044466093,"results":"30","hashOfConfig":"17"},{"size":2913,"mtime":1609379378453,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hdf9ai",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\practice\\metal_slime_app\\src\\index.js",[],["67","68"],"C:\\Users\\user\\practice\\metal_slime_app\\src\\App.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Room.js",["69"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../config/Firebase'\r\n\r\nimport { AuthContext } from '../AuthService'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './room.css'\r\nimport profile from '../img/profile.img.jpg'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Room = () => {\r\n\r\n    const [messages, setMessages] = useState(null)\r\n    const [value, setValue] = useState('')\r\n    const [image, setImage] = useState('')\r\n\r\n    const user = useContext(AuthContext)\r\n    useEffect(() => {\r\n        if (user) {\r\n\r\n            firebase.firestore().collection('messages').orderBy('date')\r\n                .onSnapshot((snapshot) => {\r\n                    const messages = snapshot.docs.map(doc => {\r\n                        return doc.data()\r\n                    })\r\n                    setMessages(messages)\r\n                })\r\n            firebase.storage().ref().child(`/images/${user.uid}`).getDownloadURL().then(fireBaseUrl => {\r\n                setImage(fireBaseUrl)\r\n            })\r\n        }\r\n}, [user])\r\n\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault()\r\n    const textNone = document.getElementById('tuika')\r\n    if (textNone.value === '')\r\n        return;\r\n    else\r\n        textNone.value = ''\r\n    firebase.firestore().collection('messages')\r\n        .add({\r\n            user: user.displayName,\r\n            content: value,\r\n            image: image,\r\n            date: new Date()\r\n        })\r\n    setMessages([\r\n        ...messages,\r\n        {\r\n            user: user.displayName,\r\n            image: image,\r\n            content: value,\r\n            date: new Date()\r\n        }\r\n    ])\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <h1 className=\"title_chat\">トーク</h1>\r\n        <div className=\"goto_update\">\r\n            <Button size='small' variant='outlined' onClick={() => firebase.auth().signOut()}>ログアウト</Button>\r\n            <p><Link to=\"/update\" className=\"link_chat\">プロフィール変更</Link></p>\r\n        </div>\r\n        <div className=\"wrap_nav_chat\">\r\n            <p className=\"nav_chat\">トーク</p>\r\n            <p><Link to=\"/todo\" className=\"link_chat\">Todo</Link></p>\r\n            <p><Link to=\"/Recommended\" className=\"link_chat\">おすすめ</Link></p>\r\n            <p><Link to=\"/album\" className=\"link_chat\">卒業アルバム</Link></p>\r\n        </div>\r\n        <div className='took'>\r\n            <ul className='room-ul'>\r\n                {messages ?\r\n                    messages.map((message, id) =>\r\n                    (<li key={id} className='messages' >\r\n                        <div className='icon'>\r\n                            <img className='icon-img' src={message.image ? message.image : profile} />\r\n                        </div>\r\n                        <div>\r\n                            <p >{message.user}</p>\r\n                            <p className='message'>{message.content}</p>\r\n                        </div>\r\n                    </li>)\r\n                    ) :\r\n                    <p>...loading</p>\r\n                }\r\n            </ul>\r\n            <form onSubmit={handleSubmit} className='took-form'>\r\n                <div className='took-form2'>\r\n                    <input\r\n                        type='text'\r\n                        id='tuika'\r\n                        placeholder='メッセージを入力'\r\n                        onChange={e => setValue(e.target.value)}\r\n                    />\r\n                    <div type='submit' className='took-button'></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Room","C:\\Users\\user\\practice\\metal_slime_app\\src\\AuthService.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\LoggedInRoute.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\SignUp.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Login.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\Recommended.js",["70"],"import React from 'react'\r\nimport css from './style.css'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport firebase from '../config/Firebase'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst Recommended = () => {\r\n    return (\r\n\r\n        <div className={css}>\r\n            <h1 className=\"title_osusume\">おすすめ</h1>\r\n            <Button size=\"small\" variant=\"outlined\" onClick={() => firebase.auth().signOut()}>ログアウト</Button>\r\n            <div className=\"wrap_nav_osusume\">\r\n                <p><Link to=\"/Room\" className=\"link_osusume\">トーク</Link></p>\r\n                <p><Link to=\"/todo\" className=\"link_osusume\">Todo</Link></p>\r\n                <p className=\"nav_osusume\">おすすめ</p>\r\n                <p><Link to=\"/album\" className=\"link_osusume\">卒業アルバム</Link></p>\r\n                \r\n            </div>\r\n\r\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_A\" className=\"tab_radio\" defaultChecked />\r\n            <label htmlFor=\"tab_radio_A\" className=\"tab_menu\">山口海斗</label>\r\n\r\n\r\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_B\" className=\"tab_radio\" />\r\n            <label htmlFor=\"tab_radio_B\" className=\"tab_menu\">鈴木孝太郎</label>\r\n\r\n            <input type=\"radio\" name=\"tab_item\" id=\"tab_radio_C\" className=\"tab_radio\" />\r\n            <label htmlFor=\"tab_radio_C\" className=\"tab_menu\">松本彪</label>\r\n\r\n\r\n\r\n            <div id=\"tab_contains_A\" className=\"tab_contains\">\r\n                <ul>\r\n                    <li>言語に限らず、firestoreやwordpressなど幅広移動ががある。動画も一つ一つが軽いので取り組みやすいです！</li>\r\n                    <a href=\"https://dotinstall.com/\">ドットインストール</a>\r\n                    <li>gitのコマンドについて漫画で教えてくれます。意外とわかりやすい。</li>\r\n                    <a href=\"https://www.r-staffing.co.jp/engineer/entry/20190621_1\">gitを漫画で理解</a>\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <div id=\"tab_contains_B\" className=\"tab_contains\">\r\n               <ul>\r\n                   <li>gitコマンドの意味がまとまっていて、分からない時に役立ちます！</li>\r\n                   <a href=\"https://kitsune.blog/git-command\">gitコマンドの使い方 まとめ集</a>\r\n                   <li>VS codeのショートカットキーで作業効率が上がるので便利です！</li>\r\n                   <div id=\"iframe-parent\">\r\n                   <iframe width=\"1280\" height=\"720\" src=\"https://www.youtube.com/embed/cNyvefTJOcM\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>【完全保存版】VS Code ショートカット</iframe>\r\n                   </div>\r\n               </ul>\r\n            </div>\r\n\r\n\r\n            <div id=\"tab_contains_C\" className=\"tab_contains\">\r\n                <ul>\r\n                    <li>初心者でもわかりやすいコードの基本的な書き方が学べます。</li>\r\n                    <a href=\"https://prog-8.com/\">Progate</a>\r\n                    <li>gitがわからなくなったときにこれを見れば大体解決できます。</li>\r\n                    <a href=\"https://backlog.com/ja/git-tutorial/\">サル先生のGit入門</a>\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Recommended","C:\\Users\\user\\practice\\metal_slime_app\\src\\config\\Firebase.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Todo.js",["71","72","73"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Form from './Form'\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../AuthService'\r\nimport './todo.css'\r\nimport firebase from '../config/Firebase'\r\n\r\n//MaaterialUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Todo = () => {\r\n  const [todos, setTodos] = useState([])\r\n  const user = useContext(AuthContext)\r\n  const addTodo = contents => {\r\n    console.log(contents)\r\n    firebase.firestore().collection('todos')\r\n      .add({\r\n        state: false,\r\n        content: contents,\r\n        date: new Date(),\r\n        user:user.displayName\r\n      })\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    firebase.firestore().collection('todos').where(\"user\", \"==\", user.displayName).onSnapshot((snapshot) => {\r\n        const todos = snapshot.docs.map(doc => {\r\n          return doc.data()\r\n        })\r\n        setTodos(todos)\r\n      })\r\n    var delete_todos = firebase.firestore().collection('todos').where(\"state\", \"==\", true);\r\n    delete_todos.get().then(function (querySnapshot) {\r\n      querySnapshot.forEach(function (doc) {\r\n        console.log(doc.id, \" => \", doc.data());\r\n        doc.ref.delete();\r\n      });\r\n    })\r\n  }, [])\r\n\r\n  //MaterialUI\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"title_todo\">Todoリスト</h1>\r\n      <Button size=\"small\" variant=\"outlined\" onClick={() => firebase.auth().signOut()}>ログアウト</Button>\r\n      {/* <button onClick={() => firebase.auth().signOut()}>Logout</button> */}\r\n      <div className=\"wrap_todo\">\r\n        <p ><Link to=\"/Room\" className=\"link_todo\">トーク</Link></p>\r\n        <p className=\"nav_todo\">Todo</p> \r\n        <p ><Link to=\"/Recommended\" className=\"link_todo\">おすすめ</Link></p>\r\n        <p ><Link to=\"/album\" className=\"link_todo\">卒業アルバム</Link></p>\r\n      </div>\r\n      <h4 className=\"purpose\">目標：アプリを一つ作る</h4>\r\n      <Form addTodo={addTodo} />\r\n      <ul className=\"list_style\">\r\n        {todos ?\r\n          todos.map((todo, id) =>\r\n          (<li key={id}>\r\n            <input type=\"checkbox\" onChange={() => {\r\n              firebase.firestore().collection('todos').where(\"content\", \"==\", todo.content).get().then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                  doc.ref.update({state: !doc.data().state});\r\n                });\r\n              })\r\n            }}\r\n            />\r\n            <span>{todo.content}</span>\r\n          </li>)\r\n          ) :\r\n          <p>...loading</p>\r\n        }\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\nexport default Todo","C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Form.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\List.js",[],["74","75"],"C:\\Users\\user\\practice\\metal_slime_app\\src\\todo\\Item.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\pages\\album.js",[],"C:\\Users\\user\\practice\\metal_slime_app\\src\\profile\\UpDate.js",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":80,"column":29,"nodeType":"84","endLine":80,"endColumn":103},{"ruleId":"85","severity":1,"message":"86","line":50,"column":20,"nodeType":"84","endLine":50,"endColumn":231},{"ruleId":"87","severity":1,"message":"88","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":48,"column":6,"nodeType":"93","endLine":48,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":51,"column":9,"nodeType":"89","messageId":"90","endLine":51,"endColumn":16},{"ruleId":"78","replacedBy":"96"},{"ruleId":"80","replacedBy":"97"},{"ruleId":"87","severity":1,"message":"98","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"91","severity":1,"message":"99","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":10,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.displayName'. Either include it or remove the dependency array.","ArrayExpression",["103"],"'classes' is assigned a value but never used.",["101"],["102"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [user.displayName]",{"range":"109","text":"110"},"Update the dependencies array to be: [user.uid]",{"range":"111","text":"112"},[1461,1463],"[user.displayName]",[728,730],"[user.uid]"]
>>>>>>> develop-s
